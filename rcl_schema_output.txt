SQL> -- Group number: G067
SQL> -- Student ID: 31444059 and 34280014
SQL> -- Student Name: Jason Abi Chebli and Keng Hong Low
SQL> -- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
SQL> --   at:        2024-09-17 14:25:36 AEST
SQL> --   site:      Oracle Database 12c
SQL> --   type:      Oracle Database 12c
SQL> DROP TABLE author CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE book_copy CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE borrower CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE branch CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE catalogue CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE catalogue_author CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE catalogue_subject CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE class CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE identifier CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE lga CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE loan CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE manager CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE publisher CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE reservation CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE subject CASCADE CONSTRAINTS;

TABLE dropped.

SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> -- predefined type, no DDL - XMLTYPE
SQL> CREATE TABLE author (
  2      author_id    NUMBER(4) NOT NULL,
  3      author_fname VARCHAR2(20) NOT NULL,
  4      author_lname VARCHAR2(20) NOT NULL
  5  );

TABLE created.

SQL> COMMENT ON COLUMN author.author_id IS
  2      'Author ID';
Comment created.

SQL> COMMENT ON COLUMN author.author_fname IS
  2      'Author First Name';
Comment created.

SQL> COMMENT ON COLUMN author.author_lname IS
  2      'Author Last Name';
Comment created.

SQL> ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_id );

TABLE altered.

SQL> CREATE TABLE book_copy (
  2      branch_code              NUMBER(3) NOT NULL,
  3      book_copy_id             NUMBER(4) NOT NULL,
  4      book_copy_status         CHAR(3) NOT NULL,
  5      book_copy_purchase_price NUMBER(5, 2) NOT NULL,
  6      identifier_isbn          NUMBER(13) NOT NULL
  7  );

TABLE created.

SQL> ALTER TABLE book_copy
  2      ADD CONSTRAINT chk_book_copy_status CHECK ( book_copy_status IN ( 'AFB', 'DMG', 'LOS', 'OCR', 'OLN',
  3                                                                        'STL' ) );

TABLE altered.

SQL> COMMENT ON COLUMN book_copy.branch_code IS
  2      'Branch Code';
Comment created.

SQL> COMMENT ON COLUMN book_copy.book_copy_id IS
  2      'Book Copy ID';
Comment created.

SQL> COMMENT ON COLUMN book_copy.book_copy_status IS
  2      'Book Copy Status (OCR = On Counter Reserve, OLN = On Loan, AFB = Available for Borrowing, STL = Stolen, LOS = Lost, DMG = Damaged)'
  3       ;
Comment created.

SQL> COMMENT ON COLUMN book_copy.book_copy_purchase_price IS
  2      'Book Copy Purchase Price';
Comment created.

SQL> COMMENT ON COLUMN book_copy.identifier_isbn IS
  2      'Identifier ISBN';
Comment created.

SQL> ALTER TABLE book_copy ADD CONSTRAINT book_copy_pk PRIMARY KEY ( book_copy_id,
  2                                                                  branch_code );

TABLE altered.

SQL> CREATE TABLE borrower (
  2      borrower_no       NUMBER(4) NOT NULL,
  3      borrower_fname    VARCHAR2(20) NOT NULL,
  4      borrower_lname    VARCHAR2(20) NOT NULL,
  5      borrower_street   VARCHAR2(40) NOT NULL,
  6      borrower_city     VARCHAR2(30) NOT NULL,
  7      borrower_state    CHAR(3) NOT NULL,
  8      borrower_postcode CHAR(4) NOT NULL,
  9      borrower_phone_no CHAR(10),
  10      borrower_status   CHAR(1) NOT NULL,
  11      branch_code       NUMBER(3) NOT NULL,
  12      class_type        CHAR(1) NOT NULL
  13  );

TABLE created.

SQL> ALTER TABLE borrower
  2      ADD CONSTRAINT chk_borrower_state CHECK ( borrower_state IN ( 'ACT', 'NSW', 'NT', 'QLD', 'SA',
  3                                                                    'TAS', 'VIC', 'WA' ) );

TABLE altered.

SQL> ALTER TABLE borrower
  2      ADD CONSTRAINT chk_borrower_status CHECK ( borrower_status IN ( 'B', 'P' ) );

TABLE altered.

SQL> COMMENT ON COLUMN borrower.borrower_no IS
  2      'Borrower Number';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_fname IS
  2      'Borrower First Name';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_lname IS
  2      'Borrower Last Name';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_street IS
  2      'Borrower Street Number and Name';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_city IS
  2      'Borrower Suburb';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_state IS
  2      'Borrower State (VIC = Victoria, NSW = New South Wales, QLD = Queensland, NT = Northern Territory, WA = Western Australia, SA = South Australia, TAS = Tasmania, ACT = Australian Capital Territory)'
  3       ;
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_postcode IS
  2      'Borrower Postcode';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_phone_no IS
  2      'Borrower''s Phone Number';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_status IS
  2      'Borrower''s Status (P=Permitted, B=Banned)';
Comment created.

SQL> COMMENT ON COLUMN borrower.branch_code IS
  2      'Branch Code';
Comment created.

SQL> COMMENT ON COLUMN borrower.class_type IS
  2      'Class Type ( A= Adults, C = Child, O = Organisation)';
Comment created.

SQL> ALTER TABLE borrower ADD CONSTRAINT borrower_pk PRIMARY KEY ( borrower_no );

TABLE altered.

SQL> CREATE TABLE branch (
  2      branch_code     NUMBER(3) NOT NULL,
  3      branch_name     VARCHAR2(20) NOT NULL,
  4      branch_address  VARCHAR2(80) NOT NULL,
  5      branch_phone_no CHAR(10) NOT NULL,
  6      manager_id      NUMBER(3) NOT NULL,
  7      lga_id          NUMBER(3) NOT NULL
  8  );

TABLE created.

SQL> COMMENT ON COLUMN branch.branch_code IS
  2      'Branch Code';
Comment created.

SQL> COMMENT ON COLUMN branch.branch_name IS
  2      'Branch Name';
Comment created.

SQL> COMMENT ON COLUMN branch.branch_address IS
  2      'Branch Address';
Comment created.

SQL> COMMENT ON COLUMN branch.branch_phone_no IS
  2      'Branch Phone Number';
Comment created.

SQL> COMMENT ON COLUMN branch.manager_id IS
  2      'Manager ID';
Comment created.

SQL> COMMENT ON COLUMN branch.lga_id IS
  2      'LGA ID';
Comment created.

SQL> ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_code );

TABLE altered.

SQL> CREATE TABLE catalogue (
  2      catalogue_call_no        VARCHAR2(25) NOT NULL,
  3      catalogue_title          VARCHAR2(100) NOT NULL,
  4      catalogue_publish_year   CHAR(4) NOT NULL,
  5      catalogue_contents       VARCHAR2(2000) NOT NULL,
  6      catalogue_page_no        NUMBER(3) NOT NULL,
  7      catalogue_language       VARCHAR2(20) NOT NULL,
  8      catalogue_classification CHAR(1) NOT NULL,
  9      catalogue_reading_level  NUMBER(2),
  10      catalogue_edition        VARCHAR2(12),
  11      catalogue_note           VARCHAR2(200),
  12      publisher_id             NUMBER(4) NOT NULL
  13  );

TABLE created.

SQL> ALTER TABLE catalogue
  2      ADD CONSTRAINT chk_catalogue_classification CHECK ( catalogue_classification IN ( 'F', 'R' ) );

TABLE altered.

SQL> ALTER TABLE catalogue
  2      ADD CONSTRAINT chk_catalogue_reading_level CHECK ( catalogue_reading_level BETWEEN 1 AND 30 );

TABLE altered.

SQL> COMMENT ON COLUMN catalogue.catalogue_call_no IS
  2      'Catalogue Call Number';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_title IS
  2      'Catalogue Title';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_publish_year IS
  2      'Catalogue Publish Year';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_contents IS
  2      'Catalogue Content';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_page_no IS
  2      'Catalogue Page Number';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_language IS
  2      'Catalogue Language';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_classification IS
  2      'Catalogue Classification (R = Reference, F = Fiction)';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_reading_level IS
  2      'Catalogue Reading Level (from 1 (Easy) to 30 (Very Difficult))';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_edition IS
  2      'Catalogue Edition (Accpetable Format: ##st Edition, ##nd Edition, ##rd Edition or ##th Edition)';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catalogue_note IS
  2      'Catalogue Note';
Comment created.

SQL> COMMENT ON COLUMN catalogue.publisher_id IS
  2      'Publisher ID';
Comment created.

SQL> ALTER TABLE catalogue ADD CONSTRAINT catalogue_pk PRIMARY KEY ( catalogue_call_no );

TABLE altered.

SQL> CREATE TABLE catalogue_author (
  2      catalogue_call_no VARCHAR2(25) NOT NULL,
  3      author_id         NUMBER(4) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN catalogue_author.catalogue_call_no IS
  2      'Catalogue Call Number';
Comment created.

SQL> COMMENT ON COLUMN catalogue_author.author_id IS
  2      'Author ID';
Comment created.

SQL> ALTER TABLE catalogue_author ADD CONSTRAINT catalogue_author_pk PRIMARY KEY ( author_id,
  2                                                                                catalogue_call_no );

TABLE altered.

SQL> CREATE TABLE catalogue_subject (
  2      catalogue_call_no VARCHAR2(25) NOT NULL,
  3      subject_id        NUMBER(4) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN catalogue_subject.catalogue_call_no IS
  2      'Catalogue Call Number';
Comment created.

SQL> COMMENT ON COLUMN catalogue_subject.subject_id IS
  2      'Subejct ID';
Comment created.

SQL> ALTER TABLE catalogue_subject ADD CONSTRAINT catalogue_subject_pk PRIMARY KEY ( catalogue_call_no,
  2                                                                                  subject_id );

TABLE altered.

SQL> CREATE TABLE class (
  2      class_type                 CHAR(1) NOT NULL,
  3      class_no_allowed_books     NUMBER(2) NOT NULL,
  4      class_standard_loan_period NUMBER(2) NOT NULL
  5  );

TABLE created.

SQL> ALTER TABLE class
  2      ADD CONSTRAINT chk_class_type CHECK ( class_type IN ( 'A', 'C', 'O' ) );

TABLE altered.

SQL> COMMENT ON COLUMN class.class_type IS
  2      'Class Type ( A= Adults, C = Child, O = Organisation)';
Comment created.

SQL> COMMENT ON COLUMN class.class_no_allowed_books IS
  2      'Number of Allowed Books of the Class';
Comment created.

SQL> COMMENT ON COLUMN class.class_standard_loan_period IS
  2      'Standard Loan Period of the Class (number of days a book can be borrowed)';
Comment created.

SQL> ALTER TABLE class ADD CONSTRAINT class_pk PRIMARY KEY ( class_type );

TABLE altered.

SQL> CREATE TABLE identifier (
  2      identifier_isbn      NUMBER(13) NOT NULL,
  3      identifier_book_type CHAR(2) NOT NULL,
  4      catalogue_call_no    VARCHAR2(25) NOT NULL
  5  );

TABLE created.

SQL> ALTER TABLE identifier
  2      ADD CONSTRAINT chk_identifier_book_type CHECK ( identifier_book_type IN ( 'HC', 'LL' ) );

TABLE altered.

SQL> COMMENT ON COLUMN identifier.identifier_isbn IS
  2      'Identifier ISBN';
Comment created.

SQL> COMMENT ON COLUMN identifier.identifier_book_type IS
  2      'Identifier Book Type (HC = Hardcover, LL = Loose Leaf)';
Comment created.

SQL> COMMENT ON COLUMN identifier.catalogue_call_no IS
  2      'Catalogue Call Number';
Comment created.

SQL> ALTER TABLE identifier ADD CONSTRAINT identifier_pk PRIMARY KEY ( identifier_isbn );

TABLE altered.

SQL> CREATE TABLE lga (
  2      lga_id               NUMBER(3) NOT NULL,
  3      lga_name             VARCHAR2(30) NOT NULL,
  4      lga_size             NUMBER(4, 2) NOT NULL,
  5      lga_contact_name     VARCHAR2(40) NOT NULL,
  6      lga_contact_phone_no CHAR(10) NOT NULL
  7  );

TABLE created.

SQL> COMMENT ON COLUMN lga.lga_id IS
  2      'LGA ID';
Comment created.

SQL> COMMENT ON COLUMN lga.lga_name IS
  2      'LGA Name';
Comment created.

SQL> COMMENT ON COLUMN lga.lga_size IS
  2      'LGA Size (in Hectares)';
Comment created.

SQL> COMMENT ON COLUMN lga.lga_contact_name IS
  2      'LGA Contact Name';
Comment created.

SQL> COMMENT ON COLUMN lga.lga_contact_phone_no IS
  2      'LGA Contact Phone Number';
Comment created.

SQL> ALTER TABLE lga ADD CONSTRAINT lga_pk PRIMARY KEY ( lga_id );

TABLE altered.

SQL> CREATE TABLE loan (
  2      loan_no              NUMBER(5) NOT NULL,
  3      branch_code          NUMBER(3) NOT NULL,
  4      book_copy_id         NUMBER(4) NOT NULL,
  5      loan_datetime        DATE NOT NULL,
  6      loan_due_date        DATE NOT NULL,
  7      loan_return_datetime DATE NOT NULL,
  8      loan_fine_amount     NUMBER(4, 2),
  9      loan_fine_date_paid  DATE,
  10      borrower_no          NUMBER(4) NOT NULL
  11  );

TABLE created.

SQL> COMMENT ON COLUMN loan.loan_no IS
  2      'Loan Number (Surrogate Key)';
Comment created.

SQL> COMMENT ON COLUMN loan.branch_code IS
  2      'Branch Code';
Comment created.

SQL> COMMENT ON COLUMN loan.book_copy_id IS
  2      'Book Copy ID';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_datetime IS
  2      'Loan Datetime';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_due_date IS
  2      'Loan Duedate';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_return_datetime IS
  2      'Loan Return Datetime';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_fine_amount IS
  2      'Loan Fine Amount $';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_fine_date_paid IS
  2      'Loan Date Paid';
Comment created.

SQL> COMMENT ON COLUMN loan.borrower_no IS
  2      'Borrower Number';
Comment created.

SQL> ALTER TABLE loan ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_no );

TABLE altered.

SQL> ALTER TABLE loan
  2      ADD CONSTRAINT loan_nk UNIQUE ( loan_datetime,
  3                                      book_copy_id,
  4                                      branch_code );

TABLE altered.

SQL> CREATE TABLE manager (
  2      manager_id       NUMBER(3) NOT NULL,
  3      manager_fname    VARCHAR2(20) NOT NULL,
  4      manager_lname    VARCHAR2(20) NOT NULL,
  5      manager_phone_no CHAR(10) NOT NULL,
  6      branch_code      NUMBER(3) NOT NULL
  7  );

TABLE created.

SQL> COMMENT ON COLUMN manager.manager_id IS
  2      'Manager ID';
Comment created.

SQL> COMMENT ON COLUMN manager.manager_fname IS
  2      'Manager First Name';
Comment created.

SQL> COMMENT ON COLUMN manager.manager_lname IS
  2      'Manager Last Name';
Comment created.

SQL> COMMENT ON COLUMN manager.manager_phone_no IS
  2      'Manager Phone Number';
Comment created.

SQL> COMMENT ON COLUMN manager.branch_code IS
  2      'Branch Code';
Comment created.

SQL> CREATE UNIQUE INDEX manager__idx ON
  2      manager (
  3          branch_code
  4      ASC );

INDEX created.

SQL> ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

TABLE altered.

SQL> CREATE TABLE publisher (
  2      publisher_id   NUMBER(4) NOT NULL,
  3      publisher_name VARCHAR2(20) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN publisher.publisher_id IS
  2      'Publisher ID';
Comment created.

SQL> COMMENT ON COLUMN publisher.publisher_name IS
  2      'Publisher Name';
Comment created.

SQL> ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_id );

TABLE altered.

SQL> CREATE TABLE reservation (
  2      reservation_no       NUMBER(4) NOT NULL,
  3      reservation_datetime DATE NOT NULL,
  4      borrower_no          NUMBER(4) NOT NULL,
  5      book_copy_id         NUMBER(4) NOT NULL,
  6      branch_code          NUMBER(3) NOT NULL
  7  );

TABLE created.

SQL> COMMENT ON COLUMN reservation.reservation_no IS
  2      'Reservation Number (Surrogate Key)';
Comment created.

SQL> COMMENT ON COLUMN reservation.reservation_datetime IS
  2      'Reservation date and time';
Comment created.

SQL> COMMENT ON COLUMN reservation.borrower_no IS
  2      'Borrower Number';
Comment created.

SQL> COMMENT ON COLUMN reservation.book_copy_id IS
  2      'Book Copy ID';
Comment created.

SQL> COMMENT ON COLUMN reservation.branch_code IS
  2      'Branch Code';
Comment created.

SQL> ALTER TABLE reservation ADD CONSTRAINT reservation_pk PRIMARY KEY ( reservation_no );

TABLE altered.

SQL> ALTER TABLE reservation
  2      ADD CONSTRAINT reservation_nk UNIQUE ( reservation_datetime,
  3                                             borrower_no,
  4                                             book_copy_id,
  5                                             branch_code );

TABLE altered.

SQL> CREATE TABLE subject (
  2      subject_id   NUMBER(4) NOT NULL,
  3      subject_desc VARCHAR2(50) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN subject.subject_id IS
  2      'Subejct ID';
Comment created.

SQL> COMMENT ON COLUMN subject.subject_desc IS
  2      'Subject Description';
Comment created.

SQL> ALTER TABLE subject ADD CONSTRAINT subject_pk PRIMARY KEY ( subject_id );

TABLE altered.

SQL> ALTER TABLE catalogue_author
  2      ADD CONSTRAINT author_catalogue_author_fk FOREIGN KEY ( author_id )
  3          REFERENCES author ( author_id );

TABLE altered.

SQL> ALTER TABLE book_copy
  2      ADD CONSTRAINT book_copy_identifier_fk FOREIGN KEY ( identifier_isbn )
  3          REFERENCES identifier ( identifier_isbn );

TABLE altered.

SQL> ALTER TABLE loan
  2      ADD CONSTRAINT book_copy_loan_fk FOREIGN KEY ( book_copy_id,
  3                                                     branch_code )
  4          REFERENCES book_copy ( book_copy_id,
  5                                 branch_code );

TABLE altered.

SQL> ALTER TABLE reservation
  2      ADD CONSTRAINT book_copy_reservation_fk FOREIGN KEY ( book_copy_id,
  3                                                            branch_code )
  4          REFERENCES book_copy ( book_copy_id,
  5                                 branch_code );

TABLE altered.

SQL> ALTER TABLE loan
  2      ADD CONSTRAINT borrower_loan_fk FOREIGN KEY ( borrower_no )
  3          REFERENCES borrower ( borrower_no );

TABLE altered.

SQL> ALTER TABLE reservation
  2      ADD CONSTRAINT borrower_reservation_fk FOREIGN KEY ( borrower_no )
  3          REFERENCES borrower ( borrower_no );

TABLE altered.

SQL> ALTER TABLE book_copy
  2      ADD CONSTRAINT branch_book_copy_fk FOREIGN KEY ( branch_code )
  3          REFERENCES branch ( branch_code );

TABLE altered.

SQL> ALTER TABLE borrower
  2      ADD CONSTRAINT branch_borrower_fk FOREIGN KEY ( branch_code )
  3          REFERENCES branch ( branch_code );

TABLE altered.

SQL> ALTER TABLE manager
  2      ADD CONSTRAINT branch_manager_fk FOREIGN KEY ( branch_code )
  3          REFERENCES branch ( branch_code );

TABLE altered.

SQL> ALTER TABLE catalogue_author
  2      ADD CONSTRAINT catalogue_catalogue_author_fk FOREIGN KEY ( catalogue_call_no )
  3          REFERENCES catalogue ( catalogue_call_no );

TABLE altered.

SQL> ALTER TABLE catalogue_subject
  2      ADD CONSTRAINT catalogue_catalogue_subject_fk FOREIGN KEY ( catalogue_call_no )
  3          REFERENCES catalogue ( catalogue_call_no );

TABLE altered.

SQL> ALTER TABLE identifier
  2      ADD CONSTRAINT catalogue_identifier_fk FOREIGN KEY ( catalogue_call_no )
  3          REFERENCES catalogue ( catalogue_call_no );

TABLE altered.

SQL> ALTER TABLE borrower
  2      ADD CONSTRAINT class_borrower_fk FOREIGN KEY ( class_type )
  3          REFERENCES class ( class_type );

TABLE altered.

SQL> ALTER TABLE branch
  2      ADD CONSTRAINT lga_branch_fk FOREIGN KEY ( lga_id )
  3          REFERENCES lga ( lga_id );

TABLE altered.

SQL> ALTER TABLE branch
  2      ADD CONSTRAINT manager_branch_fk FOREIGN KEY ( manager_id )
  3          REFERENCES manager ( manager_id );

TABLE altered.

SQL> ALTER TABLE catalogue
  2      ADD CONSTRAINT publisher_catalogue_fk FOREIGN KEY ( publisher_id )
  3          REFERENCES publisher ( publisher_id );

TABLE altered.

SQL> ALTER TABLE catalogue_subject
  2      ADD CONSTRAINT subject_catalogue_subject_fk FOREIGN KEY ( subject_id )
  3          REFERENCES subject ( subject_id );

TABLE altered.

SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            15
SQL> -- CREATE INDEX                             1
SQL> -- ALTER TABLE                             41
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> SPOOL off


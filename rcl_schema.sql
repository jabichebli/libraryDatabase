-- Capture run of script in file called rcl_schema_output.txt
set echo on
SPOOL rcl_schema_output.txt

-- Group number: G067
-- Student ID: 31444059 and 34280014
-- Student Name: Jason Abi Chebli and Keng Hong Low


-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-09-17 14:25:36 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE author CASCADE CONSTRAINTS;

DROP TABLE book_copy CASCADE CONSTRAINTS;

DROP TABLE borrower CASCADE CONSTRAINTS;

DROP TABLE branch CASCADE CONSTRAINTS;

DROP TABLE catalogue CASCADE CONSTRAINTS;

DROP TABLE catalogue_author CASCADE CONSTRAINTS;

DROP TABLE catalogue_subject CASCADE CONSTRAINTS;

DROP TABLE class CASCADE CONSTRAINTS;

DROP TABLE identifier CASCADE CONSTRAINTS;

DROP TABLE lga CASCADE CONSTRAINTS;

DROP TABLE loan CASCADE CONSTRAINTS;

DROP TABLE manager CASCADE CONSTRAINTS;

DROP TABLE publisher CASCADE CONSTRAINTS;

DROP TABLE reservation CASCADE CONSTRAINTS;

DROP TABLE subject CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE author (
    author_id    NUMBER(4) NOT NULL,
    author_fname VARCHAR2(20) NOT NULL,
    author_lname VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN author.author_id IS
    'Author ID';

COMMENT ON COLUMN author.author_fname IS
    'Author First Name';

COMMENT ON COLUMN author.author_lname IS
    'Author Last Name';

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_id );

CREATE TABLE book_copy (
    branch_code              NUMBER(3) NOT NULL,
    book_copy_id             NUMBER(4) NOT NULL,
    book_copy_status         CHAR(3) NOT NULL,
    book_copy_purchase_price NUMBER(5, 2) NOT NULL,
    identifier_isbn          NUMBER(13) NOT NULL
);

ALTER TABLE book_copy
    ADD CONSTRAINT chk_book_copy_status CHECK ( book_copy_status IN ( 'AFB', 'DMG', 'LOS', 'OCR', 'OLN',
                                                                      'STL' ) );

COMMENT ON COLUMN book_copy.branch_code IS
    'Branch Code';

COMMENT ON COLUMN book_copy.book_copy_id IS
    'Book Copy ID';

COMMENT ON COLUMN book_copy.book_copy_status IS
    'Book Copy Status (OCR = On Counter Reserve, OLN = On Loan, AFB = Available for Borrowing, STL = Stolen, LOS = Lost, DMG = Damaged)'
    ;

COMMENT ON COLUMN book_copy.book_copy_purchase_price IS
    'Book Copy Purchase Price';

COMMENT ON COLUMN book_copy.identifier_isbn IS
    'Identifier ISBN';

ALTER TABLE book_copy ADD CONSTRAINT book_copy_pk PRIMARY KEY ( book_copy_id,
                                                                branch_code );

CREATE TABLE borrower (
    borrower_no       NUMBER(4) NOT NULL,
    borrower_fname    VARCHAR2(20) NOT NULL,
    borrower_lname    VARCHAR2(20) NOT NULL,
    borrower_street   VARCHAR2(40) NOT NULL,
    borrower_city     VARCHAR2(30) NOT NULL,
    borrower_state    CHAR(3) NOT NULL,
    borrower_postcode CHAR(4) NOT NULL,
    borrower_phone_no CHAR(10),
    borrower_status   CHAR(1) NOT NULL,
    branch_code       NUMBER(3) NOT NULL,
    class_type        CHAR(1) NOT NULL
);

ALTER TABLE borrower
    ADD CONSTRAINT chk_borrower_state CHECK ( borrower_state IN ( 'ACT', 'NSW', 'NT', 'QLD', 'SA',
                                                                  'TAS', 'VIC', 'WA' ) );

ALTER TABLE borrower
    ADD CONSTRAINT chk_borrower_status CHECK ( borrower_status IN ( 'B', 'P' ) );

COMMENT ON COLUMN borrower.borrower_no IS
    'Borrower Number';

COMMENT ON COLUMN borrower.borrower_fname IS
    'Borrower First Name';

COMMENT ON COLUMN borrower.borrower_lname IS
    'Borrower Last Name';

COMMENT ON COLUMN borrower.borrower_street IS
    'Borrower Street Number and Name';

COMMENT ON COLUMN borrower.borrower_city IS
    'Borrower Suburb';

COMMENT ON COLUMN borrower.borrower_state IS
    'Borrower State (VIC = Victoria, NSW = New South Wales, QLD = Queensland, NT = Northern Territory, WA = Western Australia, SA = South Australia, TAS = Tasmania, ACT = Australian Capital Territory)'
    ;

COMMENT ON COLUMN borrower.borrower_postcode IS
    'Borrower Postcode';

COMMENT ON COLUMN borrower.borrower_phone_no IS
    'Borrower''s Phone Number';

COMMENT ON COLUMN borrower.borrower_status IS
    'Borrower''s Status (P=Permitted, B=Banned)';

COMMENT ON COLUMN borrower.branch_code IS
    'Branch Code';

COMMENT ON COLUMN borrower.class_type IS
    'Class Type ( A= Adults, C = Child, O = Organisation)';

ALTER TABLE borrower ADD CONSTRAINT borrower_pk PRIMARY KEY ( borrower_no );

CREATE TABLE branch (
    branch_code     NUMBER(3) NOT NULL,
    branch_name     VARCHAR2(20) NOT NULL,
    branch_address  VARCHAR2(80) NOT NULL,
    branch_phone_no CHAR(10) NOT NULL,
    manager_id      NUMBER(3) NOT NULL,
    lga_id          NUMBER(3) NOT NULL
);

COMMENT ON COLUMN branch.branch_code IS
    'Branch Code';

COMMENT ON COLUMN branch.branch_name IS
    'Branch Name';

COMMENT ON COLUMN branch.branch_address IS
    'Branch Address';

COMMENT ON COLUMN branch.branch_phone_no IS
    'Branch Phone Number';

COMMENT ON COLUMN branch.manager_id IS
    'Manager ID';

COMMENT ON COLUMN branch.lga_id IS
    'LGA ID';

ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_code );

CREATE TABLE catalogue (
    catalogue_call_no        VARCHAR2(25) NOT NULL,
    catalogue_title          VARCHAR2(100) NOT NULL,
    catalogue_publish_year   CHAR(4) NOT NULL,
    catalogue_contents       VARCHAR2(2000) NOT NULL,
    catalogue_page_no        NUMBER(3) NOT NULL,
    catalogue_language       VARCHAR2(20) NOT NULL,
    catalogue_classification CHAR(1) NOT NULL,
    catalogue_reading_level  NUMBER(2),
    catalogue_edition        VARCHAR2(12),
    catalogue_note           VARCHAR2(200),
    publisher_id             NUMBER(4) NOT NULL
);

ALTER TABLE catalogue
    ADD CONSTRAINT chk_catalogue_classification CHECK ( catalogue_classification IN ( 'F', 'R' ) );

ALTER TABLE catalogue
    ADD CONSTRAINT chk_catalogue_reading_level CHECK ( catalogue_reading_level BETWEEN 1 AND 30 );

COMMENT ON COLUMN catalogue.catalogue_call_no IS
    'Catalogue Call Number';

COMMENT ON COLUMN catalogue.catalogue_title IS
    'Catalogue Title';

COMMENT ON COLUMN catalogue.catalogue_publish_year IS
    'Catalogue Publish Year';

COMMENT ON COLUMN catalogue.catalogue_contents IS
    'Catalogue Content';

COMMENT ON COLUMN catalogue.catalogue_page_no IS
    'Catalogue Page Number';

COMMENT ON COLUMN catalogue.catalogue_language IS
    'Catalogue Language';

COMMENT ON COLUMN catalogue.catalogue_classification IS
    'Catalogue Classification (R = Reference, F = Fiction)';

COMMENT ON COLUMN catalogue.catalogue_reading_level IS
    'Catalogue Reading Level (from 1 (Easy) to 30 (Very Difficult))';

COMMENT ON COLUMN catalogue.catalogue_edition IS
    'Catalogue Edition (Accpetable Format: ##st Edition, ##nd Edition, ##rd Edition or ##th Edition)';

COMMENT ON COLUMN catalogue.catalogue_note IS
    'Catalogue Note';

COMMENT ON COLUMN catalogue.publisher_id IS
    'Publisher ID';

ALTER TABLE catalogue ADD CONSTRAINT catalogue_pk PRIMARY KEY ( catalogue_call_no );

CREATE TABLE catalogue_author (
    catalogue_call_no VARCHAR2(25) NOT NULL,
    author_id         NUMBER(4) NOT NULL
);

COMMENT ON COLUMN catalogue_author.catalogue_call_no IS
    'Catalogue Call Number';

COMMENT ON COLUMN catalogue_author.author_id IS
    'Author ID';

ALTER TABLE catalogue_author ADD CONSTRAINT catalogue_author_pk PRIMARY KEY ( author_id,
                                                                              catalogue_call_no );

CREATE TABLE catalogue_subject (
    catalogue_call_no VARCHAR2(25) NOT NULL,
    subject_id        NUMBER(4) NOT NULL
);

COMMENT ON COLUMN catalogue_subject.catalogue_call_no IS
    'Catalogue Call Number';

COMMENT ON COLUMN catalogue_subject.subject_id IS
    'Subejct ID';

ALTER TABLE catalogue_subject ADD CONSTRAINT catalogue_subject_pk PRIMARY KEY ( catalogue_call_no,
                                                                                subject_id );

CREATE TABLE class (
    class_type                 CHAR(1) NOT NULL,
    class_no_allowed_books     NUMBER(2) NOT NULL,
    class_standard_loan_period NUMBER(2) NOT NULL
);

ALTER TABLE class
    ADD CONSTRAINT chk_class_type CHECK ( class_type IN ( 'A', 'C', 'O' ) );

COMMENT ON COLUMN class.class_type IS
    'Class Type ( A= Adults, C = Child, O = Organisation)';

COMMENT ON COLUMN class.class_no_allowed_books IS
    'Number of Allowed Books of the Class';

COMMENT ON COLUMN class.class_standard_loan_period IS
    'Standard Loan Period of the Class (number of days a book can be borrowed)';

ALTER TABLE class ADD CONSTRAINT class_pk PRIMARY KEY ( class_type );

CREATE TABLE identifier (
    identifier_isbn      NUMBER(13) NOT NULL,
    identifier_book_type CHAR(2) NOT NULL,
    catalogue_call_no    VARCHAR2(25) NOT NULL
);

ALTER TABLE identifier
    ADD CONSTRAINT chk_identifier_book_type CHECK ( identifier_book_type IN ( 'HC', 'LL' ) );

COMMENT ON COLUMN identifier.identifier_isbn IS
    'Identifier ISBN';

COMMENT ON COLUMN identifier.identifier_book_type IS
    'Identifier Book Type (HC = Hardcover, LL = Loose Leaf)';

COMMENT ON COLUMN identifier.catalogue_call_no IS
    'Catalogue Call Number';

ALTER TABLE identifier ADD CONSTRAINT identifier_pk PRIMARY KEY ( identifier_isbn );

CREATE TABLE lga (
    lga_id               NUMBER(3) NOT NULL,
    lga_name             VARCHAR2(30) NOT NULL,
    lga_size             NUMBER(4, 2) NOT NULL,
    lga_contact_name     VARCHAR2(40) NOT NULL,
    lga_contact_phone_no CHAR(10) NOT NULL
);

COMMENT ON COLUMN lga.lga_id IS
    'LGA ID';

COMMENT ON COLUMN lga.lga_name IS
    'LGA Name';

COMMENT ON COLUMN lga.lga_size IS
    'LGA Size (in Hectares)';

COMMENT ON COLUMN lga.lga_contact_name IS
    'LGA Contact Name';

COMMENT ON COLUMN lga.lga_contact_phone_no IS
    'LGA Contact Phone Number';

ALTER TABLE lga ADD CONSTRAINT lga_pk PRIMARY KEY ( lga_id );

CREATE TABLE loan (
    loan_no              NUMBER(5) NOT NULL,
    branch_code          NUMBER(3) NOT NULL,
    book_copy_id         NUMBER(4) NOT NULL,
    loan_datetime        DATE NOT NULL,
    loan_due_date        DATE NOT NULL,
    loan_return_datetime DATE NOT NULL,
    loan_fine_amount     NUMBER(4, 2),
    loan_fine_date_paid  DATE,
    borrower_no          NUMBER(4) NOT NULL
);

COMMENT ON COLUMN loan.loan_no IS
    'Loan Number (Surrogate Key)';

COMMENT ON COLUMN loan.branch_code IS
    'Branch Code';

COMMENT ON COLUMN loan.book_copy_id IS
    'Book Copy ID';

COMMENT ON COLUMN loan.loan_datetime IS
    'Loan Datetime';

COMMENT ON COLUMN loan.loan_due_date IS
    'Loan Duedate';

COMMENT ON COLUMN loan.loan_return_datetime IS
    'Loan Return Datetime';

COMMENT ON COLUMN loan.loan_fine_amount IS
    'Loan Fine Amount $';

COMMENT ON COLUMN loan.loan_fine_date_paid IS
    'Loan Date Paid';

COMMENT ON COLUMN loan.borrower_no IS
    'Borrower Number';

ALTER TABLE loan ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_no );

ALTER TABLE loan
    ADD CONSTRAINT loan_nk UNIQUE ( loan_datetime,
                                    book_copy_id,
                                    branch_code );

CREATE TABLE manager (
    manager_id       NUMBER(3) NOT NULL,
    manager_fname    VARCHAR2(20) NOT NULL,
    manager_lname    VARCHAR2(20) NOT NULL,
    manager_phone_no CHAR(10) NOT NULL,
    branch_code      NUMBER(3) NOT NULL
);

COMMENT ON COLUMN manager.manager_id IS
    'Manager ID';

COMMENT ON COLUMN manager.manager_fname IS
    'Manager First Name';

COMMENT ON COLUMN manager.manager_lname IS
    'Manager Last Name';

COMMENT ON COLUMN manager.manager_phone_no IS
    'Manager Phone Number';

COMMENT ON COLUMN manager.branch_code IS
    'Branch Code';

CREATE UNIQUE INDEX manager__idx ON
    manager (
        branch_code
    ASC );

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

CREATE TABLE publisher (
    publisher_id   NUMBER(4) NOT NULL,
    publisher_name VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN publisher.publisher_id IS
    'Publisher ID';

COMMENT ON COLUMN publisher.publisher_name IS
    'Publisher Name';

ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_id );

CREATE TABLE reservation (
    reservation_no       NUMBER(4) NOT NULL,
    reservation_datetime DATE NOT NULL,
    borrower_no          NUMBER(4) NOT NULL,
    book_copy_id         NUMBER(4) NOT NULL,
    branch_code          NUMBER(3) NOT NULL
);

COMMENT ON COLUMN reservation.reservation_no IS
    'Reservation Number (Surrogate Key)';

COMMENT ON COLUMN reservation.reservation_datetime IS
    'Reservation date and time';

COMMENT ON COLUMN reservation.borrower_no IS
    'Borrower Number';

COMMENT ON COLUMN reservation.book_copy_id IS
    'Book Copy ID';

COMMENT ON COLUMN reservation.branch_code IS
    'Branch Code';

ALTER TABLE reservation ADD CONSTRAINT reservation_pk PRIMARY KEY ( reservation_no );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_nk UNIQUE ( reservation_datetime,
                                           borrower_no,
                                           book_copy_id,
                                           branch_code );

CREATE TABLE subject (
    subject_id   NUMBER(4) NOT NULL,
    subject_desc VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN subject.subject_id IS
    'Subejct ID';

COMMENT ON COLUMN subject.subject_desc IS
    'Subject Description';

ALTER TABLE subject ADD CONSTRAINT subject_pk PRIMARY KEY ( subject_id );

ALTER TABLE catalogue_author
    ADD CONSTRAINT author_catalogue_author_fk FOREIGN KEY ( author_id )
        REFERENCES author ( author_id );

ALTER TABLE book_copy
    ADD CONSTRAINT book_copy_identifier_fk FOREIGN KEY ( identifier_isbn )
        REFERENCES identifier ( identifier_isbn );

ALTER TABLE loan
    ADD CONSTRAINT book_copy_loan_fk FOREIGN KEY ( book_copy_id,
                                                   branch_code )
        REFERENCES book_copy ( book_copy_id,
                               branch_code );

ALTER TABLE reservation
    ADD CONSTRAINT book_copy_reservation_fk FOREIGN KEY ( book_copy_id,
                                                          branch_code )
        REFERENCES book_copy ( book_copy_id,
                               branch_code );

ALTER TABLE loan
    ADD CONSTRAINT borrower_loan_fk FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE reservation
    ADD CONSTRAINT borrower_reservation_fk FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE book_copy
    ADD CONSTRAINT branch_book_copy_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE borrower
    ADD CONSTRAINT branch_borrower_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE manager
    ADD CONSTRAINT branch_manager_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE catalogue_author
    ADD CONSTRAINT catalogue_catalogue_author_fk FOREIGN KEY ( catalogue_call_no )
        REFERENCES catalogue ( catalogue_call_no );

ALTER TABLE catalogue_subject
    ADD CONSTRAINT catalogue_catalogue_subject_fk FOREIGN KEY ( catalogue_call_no )
        REFERENCES catalogue ( catalogue_call_no );

ALTER TABLE identifier
    ADD CONSTRAINT catalogue_identifier_fk FOREIGN KEY ( catalogue_call_no )
        REFERENCES catalogue ( catalogue_call_no );

ALTER TABLE borrower
    ADD CONSTRAINT class_borrower_fk FOREIGN KEY ( class_type )
        REFERENCES class ( class_type );

ALTER TABLE branch
    ADD CONSTRAINT lga_branch_fk FOREIGN KEY ( lga_id )
        REFERENCES lga ( lga_id );

ALTER TABLE branch
    ADD CONSTRAINT manager_branch_fk FOREIGN KEY ( manager_id )
        REFERENCES manager ( manager_id );

ALTER TABLE catalogue
    ADD CONSTRAINT publisher_catalogue_fk FOREIGN KEY ( publisher_id )
        REFERENCES publisher ( publisher_id );

ALTER TABLE catalogue_subject
    ADD CONSTRAINT subject_catalogue_subject_fk FOREIGN KEY ( subject_id )
        REFERENCES subject ( subject_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             1
-- ALTER TABLE                             41
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


SPOOL off
set echo off